<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Development on Cognition </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://cognition.ca/tags/development/index.xml</link>
    <language>en-us</language>
    
    <copyright>Copyright Joshua McKenty.</copyright>
    <updated>Wed, 06 Aug 2014 01:10:41 UTC</updated>
    
    <item>
      <title>The Dead Pool Pledge</title>
      <link>http://cognition.ca/post/dead-pool-pledge</link>
      <pubDate>Wed, 06 Aug 2014 01:10:41 UTC</pubDate>
      
      <guid>http://cognition.ca/post/dead-pool-pledge</guid>
      <description>

&lt;p&gt;I love PaaS. Recently I&amp;rsquo;ve gone to great lengths to figure out a way to build
applications using ONLY SaaS and PaaS platforms. I managed this with a mix of
wercker, github, orchestrate.io and pivotal web services.&lt;/p&gt;

&lt;p&gt;But with the commitment to any third-party platform, comes a certain kind of fear.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m a believer in open source. And I&amp;rsquo;m ALSO a believer in commercial software.
As much as I believe in the rights and freedoms of the user, I also value the
rights and freedoms of the developer - to license his or her work in the way that
they see fit.&lt;/p&gt;

&lt;p&gt;So here&amp;rsquo;s what I&amp;rsquo;m suggesting: a &amp;ldquo;Dead Pool Pledge&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Add &lt;a href=&#34;https://github.com/freepile&#34;&gt;this github account&lt;/a&gt; to your private repositories
as a collaborator. You can keep those accounts private, and your source code licensed under whatever terms
you feel is appropriate, as long as your business/project/coop is a going concern.&lt;/p&gt;

&lt;p&gt;But the day that your company ends up in the Crunchbase deadpool, my bot will
republish your source code under ASLv2. Seem fair?&lt;/p&gt;

&lt;p&gt;I know that if Wercker, Orchestrate.io and others adopted this, I would sleep a
little better at night.&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;Caveats&lt;/h2&gt;

&lt;p&gt;Okay, maybe we should try and contact you first - to find out if you&amp;rsquo;re attempting
to sell off those assets to a company who has a legitimate intent to continue
business operations.&lt;/p&gt;

&lt;p&gt;And yes, this whole thing probably ought to have some sort of contract in place -
maybe something that the SFLC or the EFF could draft up.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How I Learned to Stop Worrying and Love the (Static) Web</title>
      <link>http://cognition.ca/post/about-hugo</link>
      <pubDate>Mon, 04 Aug 2014 19:22:29 UTC</pubDate>
      
      <guid>http://cognition.ca/post/about-hugo</guid>
      <description>&lt;p&gt;I&amp;rsquo;m an early fan of the &lt;a href=&#34;http://www.aaronsw.com/weblog/000404&#34;&gt;Baked, Not Fried &lt;/a&gt;
concept behind static web generators. But somehow, getting all the tools in place
to run one myself seemed onerous. A simple &lt;code&gt;apt-get install mysql&lt;/code&gt; was always
easier than the vaguely-mystical incantations required to get jekyll up and running.&lt;/p&gt;

&lt;p&gt;Then again, there was my deep-seated prejudice against Ruby. (See my previous
    trolling of the ruby community when I accused them of being singlehandedly
    responsible for Global Warming.)&lt;/p&gt;

&lt;p&gt;But with the emergence of &lt;a href=&#34;http://hugo.spf13.com&#34;&gt;Hugo&lt;/a&gt;, an elegant static site
generator written in #Golang, I&amp;rsquo;ve been able to get over the line. Or maybe it
was simply time that I had a blog again.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>